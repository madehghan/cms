
            
            <style>
        .chat-bubble {
            border-radius: 15px;
            padding: 10px 15px;
            margin: 5px 0;
            display: inline-block;
            max-width: 70%;
        }
        .chat-bubble.user {
            background-color: #d1ecf1;
            align-self: flex-start;
        }
        .chat-bubble.response {
            background-color: #f8d7da;
            align-self: flex-end;
        }
        #responseArea {
            display: flex;
            flex-direction: column;
            height: 50vh;
            overflow-y: scroll;
            padding: 10px;
        }
        .spinner-border {
            width: 1.5rem;
            height: 1.5rem;
        }
    </style>
    
    
    <div class="border rounded p-3 mb-3" id="responseArea"></div>
    <form id="queryForm">
        <div class="row">
            <div class="col">
                <input id="queryInput" class="form-control" placeholder="سوال خود را وارد نمایید!" required>
            </div>
            <div class="col-3">
                <button type="submit" class="btn btn-primary w-100">ارسال</button>
            </div>
        </div>
    </form>
    
    
    
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script>
    $(document).ready(function() {
        $('#queryForm').submit(function(event) {
            event.preventDefault(); // Prevent the form from submitting normally

            var userMessage = $('#queryInput').val().trim();
            if (userMessage === "") {
                return;
            }

            // Display the user's message on the left
            $('#responseArea').append(
                '<div class="chat-bubble user">' + userMessage + '</div>'
            );

            // Clear the input field
            $('#queryInput').val('');

            // Scroll to the bottom of the response area
            $('#responseArea').scrollTop($('#responseArea')[0].scrollHeight);

            // Show loading spinner for the response
            var loadingIndicator = '<div id="loadingSpinner" class="chat-bubble response">' +
                                   '<div class="spinner-border text-primary" role="status">' +
                                   '<span class="sr-only"></span></div></div>';
            $('#responseArea').append(loadingIndicator);

            // Send the user's message to the server
            $.ajax({
                url: 'fetch_data.php', // URL of the PHP script
                type: 'GET',
                data: { q: userMessage }, // Send the query parameter
                dataType: 'json',
                success: function(data) {
                    // Remove the loading spinner
                    $('#loadingSpinner').remove();

                    if (data.status === 200) {
                        var responseMessage = data.result;
                    } else {
                        var responseMessage = 'Error: ' + data.result;
                    }

                    // Add the response message container
                    var responseBubble = $('<div class="chat-bubble response"></div>');
                    $('#responseArea').append(responseBubble);

                    // Typing effect
                    var i = 0;
                    function typeWriter() {
                        if (i < responseMessage.length) {
                            responseBubble.append(responseMessage.charAt(i));
                            i++;
                            setTimeout(typeWriter, 50); // Delay between each character
                        }
                    }
                    typeWriter();

                    // Scroll to the bottom of the response area
                    $('#responseArea').scrollTop($('#responseArea')[0].scrollHeight);
                },
                error: function() {
                    // Remove the loading spinner
                    $('#loadingSpinner').remove();

                    $('#responseArea').append(
                        '<div class="chat-bubble response">Error occurred while fetching data.</div>'
                    );

                    // Scroll to the bottom of the response area
                    $('#responseArea').scrollTop($('#responseArea')[0].scrollHeight);
                }
            });
        });
    });
</script>






<?php
// fetch_data.php

header('Content-Type: application/json');

// Check if 'q' parameter is set
if (!isset($_GET['q']) || empty($_GET['q'])) {
    echo json_encode(['status' => 400, 'result' => 'Query parameter is missing.']);
    exit;
}

// Get the query parameter
$query = urlencode($_GET['q']); // URL-encode the query to safely pass it in the URL

// Define your API URL and parameters
$apiUrl = "https://api3.haji-api.ir/lic/gpt/4?q={$query}&license=AyjKmU7Swb8rq7EqGzHLUTlIx0aNh8btQ8Mlb1lvpLNusqInO3X";

// Fetch the data from the API
$response = file_get_contents($apiUrl);
if ($response === FALSE) {
    echo json_encode(['status' => 500, 'result' => 'Error fetching data.']);
    exit;
}

// Decode the JSON response
$data = json_decode($response, true);

// Return the data as JSON
echo json_encode($data);
